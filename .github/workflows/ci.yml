# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: GitHub Actions CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  java:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: java
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Build with Gradle
      run: ./gradlew build
    - name: Upload coverage
      uses: codecov/codecov-action@v1

  python:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: python
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.7'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install coverage
    - name: Test and collect coverage
      run: coverage run --source=src -m unittest discover -v --pattern *_tests.py
    - name: Upload coverage
      uses: codecov/codecov-action@v1

  cpp:
    runs-on: ubuntu-latest
    env:
      BUILD_DIR: ${{runner.workspace}}/cpp/build
    defaults:
      run:
        working-directory: cpp
    steps:
    - uses: actions/checkout@v2
    - name: Create Build Environment
      # Some projects don't allow in-source building, so create a separate build directory
      # We'll use this as our working directory for all subsequent commands
      run: cmake -E make_directory $BUILD_DIR
    - name: Configure CMake
      # Use a bash shell so we can use the same syntax for environment variable
      # access regardless of the host operating system
      shell: bash
      working-directory: ${{env.BUILD_DIR}}
      run: cmake -DCMAKE_BUILD_TYPE=Debug -G "Unix Makefiles" ..
    - name: Build
      working-directory: ${{env.BUILD_DIR}}
      shell: bash
      # Execute the build.  You can specify a specific target with "--target <NAME>"
      run: cmake --build .
    - name: Test
      working-directory: ${{env.BUILD_DIR}}
      shell: bash
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest --parallel 4 --timeout 10 --output-on-failure
    - name: Collect coverage
      run: |
        lcov --directory . --capture --output-file coverage.info # capture coverage info
        lcov --remove coverage.info '/usr/*' 'test/*' --output-file coverage.info # filter out system
        lcov --list coverage.info #debug info
    - name: Upload coverage
      uses: codecov/codecov-action@v1
